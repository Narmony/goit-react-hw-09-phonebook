{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","label","display","flexDirection","marginBottom","RegisterView","dispatch","useDispatch","useState","name","email","password","user","setUser","handleChange","target","onSubmit","e","preventDefault","authOperations","register","style","autoComplete","type","onChange","variant"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,8IIGhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAOH,SAASC,IACtB,IAAMC,EAAWC,cAEjB,EAAwBC,mBAAS,CAC/BC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,mBAAOC,EAAP,KAAaC,EAAb,KAMQJ,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAEfG,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUN,EAAoB,EAApBA,KAAMhB,EAAc,EAAdA,MACtCoB,EAAQ,2BAAKD,GAAN,kBAAaH,EAAOhB,MAU7B,OACE,gCACE,gDAEA,uBAAMuB,SAXW,SAAAC,GACnBA,EAAEC,iBAEFZ,EAASa,IAAeC,SAAS,CAAEX,OAAMC,QAAOC,cAChDE,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAOTU,MAAOvB,EAAOC,KAAMuB,aAAa,MAA/D,UACE,wBAAOD,MAAOvB,EAAOG,MAArB,iBAEE,uBAAOsB,KAAK,OAAOd,KAAK,OAAOhB,MAAOgB,EAAMe,SAAUV,OAGxD,wBAAOO,MAAOvB,EAAOG,MAArB,kBAEE,uBACEsB,KAAK,QACLd,KAAK,QACLhB,MAAOiB,EACPc,SAAUV,OAId,wBAAOO,MAAOvB,EAAOG,MAArB,qBAEE,uBACEsB,KAAK,WACLd,KAAK,WACLhB,MAAOkB,EACPa,SAAUV,OAId,cAAC,IAAD,CAAQS,KAAK,SAASE,QAAQ,eAA9B","file":"static/js/RegisterView.c76bca42.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport Button from 'react-bootstrap/Button';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\n//a@qaz.com\n//qwertyu\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const { name, email, password } = user;\n\n  const handleChange = ({ target: { name, value } }) => {\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.register({ name, email, password }));\n    setUser({ name: '', email: '', password: '' });\n  };\n\n  return (\n    <div>\n      <h1>Create Account</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <Button type=\"submit\" variant=\"outline-dark\">\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n\n// class RegisterView extends Component {\n//   state = {\n//     name: '',\n//     email: '',\n//     password: '',\n//   };\n\n//   handleChange = ({ target: { name, value } }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     this.props.onRegister(this.state);\n\n//     this.setState({ name: '', email: '', password: '' });\n//   };\n\n//   render() {\n//     const { name, email, password } = this.state;\n\n//     return (\n//       <div>\n//         <h1>Create Account</h1>\n\n//         <form\n//           onSubmit={this.handleSubmit}\n//           style={styles.form}\n//           autoComplete=\"off\"\n//         >\n//           <label style={styles.label}>\n//             Name\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={name}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <label style={styles.label}>\n//             Email\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={email}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <label style={styles.label}>\n//             Password\n//             <input\n//               type=\"password\"\n//               name=\"password\"\n//               value={password}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <Button type=\"submit\" variant=\"outline-dark\">\n//             Register\n//           </Button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n// const mapDispatchToProps = {\n//   onRegister: authOperations.register,\n// };\n\n// export default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}