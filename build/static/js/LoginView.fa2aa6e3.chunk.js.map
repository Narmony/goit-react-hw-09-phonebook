{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","label","display","flexDirection","marginBottom","LoginView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","onSubmit","e","preventDefault","authOperations","logIn","style","autoComplete","type","name","onChange","evt","target","variant"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,+HIGhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAKA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAKMC,EAAWC,cAOjB,OACE,gCACE,wCAEA,uBAAMC,SAVW,SAAAC,GACnBA,EAAEC,iBAEFJ,EAASK,IAAeC,MAAM,CAAEV,QAAOE,eAOPS,MAAOpB,EAAOC,KAAMoB,aAAa,MAA/D,UACE,wBAAOD,MAAOpB,EAAOG,MAArB,kBAEE,uBACEmB,KAAK,QACLC,KAAK,QACL5B,MAAOc,EACPe,SA3BgB,SAAAC,GACxBf,EAASe,EAAIC,OAAO/B,aA8BhB,wBAAOyB,MAAOpB,EAAOG,MAArB,qBAEE,uBACEmB,KAAK,WACLC,KAAK,WACL5B,MAAOgB,EACPa,SAhCmB,SAAAC,GAC3Bb,EAAYa,EAAIC,OAAO/B,aAmCnB,cAAC,IAAD,CAAQ2B,KAAK,SAASK,QAAQ,eAA9B","file":"static/js/LoginView.fa2aa6e3.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { authOperations } from '../redux/auth';\nimport Button from 'react-bootstrap/Button';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function LoginView() {\n  const [email, setEmail] = useState('');\n  const handleEmailChange = evt => {\n    setEmail(evt.target.value);\n  };\n\n  const [password, setPassword] = useState('');\n  const handlePasswordChange = evt => {\n    setPassword(evt.target.value);\n  };\n\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.logIn({ email, password }));\n  };\n\n  return (\n    <div>\n      <h1>Log in</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleEmailChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n\n        <Button type=\"submit\" variant=\"outline-dark\">\n          Sign in\n        </Button>\n      </form>\n    </div>\n  );\n}\n\n// class LoginView extends Component {\n//   state = {\n//     email: '',\n//     password: '',\n//   };\n\n//   handleChange = ({ target: { name, value } }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     this.props.onLogin(this.state);\n\n//     this.setState({ name: '', email: '', password: '' });\n//   };\n\n//   render() {\n//     const { email, password } = this.state;\n\n//     return (\n//       <div>\n//         <h1>Log in</h1>\n\n//         <form\n//           onSubmit={this.handleSubmit}\n//           style={styles.form}\n//           autoComplete=\"off\"\n//         >\n//           <label style={styles.label}>\n//             Email\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={email}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <label style={styles.label}>\n//             Password\n//             <input\n//               type=\"password\"\n//               name=\"password\"\n//               value={password}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <Button type=\"submit\" variant=\"outline-dark\">\n//             Sign in\n//           </Button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onLogin: authOperations.logIn,\n// };\n\n// export default connect(null, mapDispatchToProps)(LoginView);\n"],"sourceRoot":""}